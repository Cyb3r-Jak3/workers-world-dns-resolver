name: Main
on:
  push:
    tags:
      - 'v*'
    paths:
      - 'container/go.sum'
      - 'go.mod'
      - '**.go'
      - .github/workflows/main.yml
      - container.Dockerfile
  pull_request:
    branches:
      - main
    paths:
      - 'container/go.sum'
      - 'go.mod'
      - '**.go'
      - .github/workflows/main.yml
      - container.Dockerfile

permissions:
  actions: write
  packages: write
  id-token: write
  attestations: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Docker:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    steps:

      - name: Login to GitHub Container Registry
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ghcr.io/cyb3r-jak3/workers-world-dns-resolver

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: build
        with:
          context: .
          # push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: container/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: true
          provenance: mode=max

      - name: GitHub Container Attestation
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        id: attest
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          subject-name: ghcr.io/cyb3r-jak3/cloudflare-utils
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: Docker
    steps:

      - name: Login to DockerHub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.SELF_HOSTED_REGISTRY_PASSWORD }}
          password: ${{ secrets.SELF_HOSTED_REGISTRY_USERNAME }}
          registry: ${{ vars.SELF_HOSTED_REGISTRY_URL }}

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      #   with:
      #     node-version: '22'

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        name: Install pnpm
        with:
          version: 10
          run_install: false
      
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      # - name: Lint
      #   if: ${{github.ref_type == 'branch'}}
      #   run: pnpm run test:lint

      # - name: Test
      #   if: ${{github.ref_type == 'branch'}}
      #   run: pnpm run test:unit


      - name: Deploy to Cloudflare with Wrangler
        run: |
          docker pull ghcr.io/cyb3r-jak3/workers-world-dns-resolver:${{ needs.Docker.outputs.digest }}
          docker tag ghcr.io/cyb3r-jak3/workers-world-dns-resolver:${{ needs.Docker.outputs.digest }} workers-world-dns-resolver:latest
          pnpm exec wrangler containers push workers-world-dns-resolver:latest --json
          jq '.env.prd.containers[].image = "registry.cloudflare.com/${{ secrets.CF_ACCOUNT_ID }}/workers-world-dns-resolver:latest"' wrangler.jsonc
          pnpm run deploy:prd
        env:
          CLOUDFLARE_API_TOKEN : ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}